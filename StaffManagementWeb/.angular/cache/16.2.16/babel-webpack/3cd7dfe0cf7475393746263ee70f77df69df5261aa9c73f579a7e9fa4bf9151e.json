{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ssanstar/Desktop/Company_Projects/Personal/StaffManagement.Web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport * as i0 from \"@angular/core\";\nexport class StaffService {\n  constructor() {\n    this.baseUrl = 'https://localhost:5001/api/staffs'; // your ASP.NET backend URL\n  }\n\n  getAll() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const res = yield axios.get(_this.baseUrl);\n      return res.data;\n    })();\n  }\n  getById(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield axios.get(`${_this2.baseUrl}/${id}`);\n      return res.data;\n    })();\n  }\n  save(staff, isEdit) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (isEdit) yield axios.put(_this3.baseUrl, staff);else yield axios.post(_this3.baseUrl, staff);\n    })();\n  }\n  delete(id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      yield axios.delete(`${_this4.baseUrl}/${id}`);\n    })();\n  }\n  search(filters) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const params = new URLSearchParams();\n      if (filters.staffId) params.append('staffId', filters.staffId);\n      if (filters.gender) params.append('gender', filters.gender.toString());\n      if (filters.startDate) params.append('startDate', filters.startDate);\n      if (filters.endDate) params.append('endDate', filters.endDate);\n      if (filters.export) params.append('export', filters.export);\n      const response = yield axios.get(`${_this5.baseUrl}?${params.toString()}`);\n      if (filters.export === \"EXCEL\") {\n        saveAs(response.data, `Staffs_${new Date().toISOString()}.xlsx`);\n        return;\n      } else if (filters.export === \"PDF\") {\n        saveAs(response.data, `Staffs_${new Date().toISOString()}.pdf`);\n        return;\n      } else return response.data;\n    })();\n  }\n  static {\n    this.ɵfac = function StaffService_Factory(t) {\n      return new (t || StaffService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StaffService,\n      factory: StaffService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["axios","saveAs","StaffService","constructor","baseUrl","getAll","_this","_asyncToGenerator","res","get","data","getById","id","_this2","save","staff","isEdit","_this3","put","post","delete","_this4","search","filters","_this5","params","URLSearchParams","staffId","append","gender","toString","startDate","endDate","export","response","Date","toISOString","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ssanstar\\Desktop\\Company_Projects\\Personal\\StaffManagement.Web\\src\\app\\services\\staff.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport interface Staff {\r\n  staffId: string;\r\n  fullName: string;\r\n  birthday: string;\r\n  gender: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StaffService {\r\n  private baseUrl = 'https://localhost:5001/api/staffs'; // your ASP.NET backend URL\r\n\r\n   async getAll(): Promise<Staff[]> {\r\n    const res = await axios.get(this.baseUrl);\r\n    return res.data;\r\n  }\r\n\r\n  async getById(id: string): Promise<Staff> {\r\n    const res = await axios.get(`${this.baseUrl}/${id}`);\r\n    return res.data;\r\n  }\r\n\r\n  async save(staff: Staff, isEdit: boolean) {\r\n    if (isEdit)\r\n    await axios.put(this.baseUrl, staff);\r\n  else\r\n    await axios.post(this.baseUrl, staff);\r\n  }\r\n\r\n  async delete(id: string) {\r\n    await axios.delete(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  async search(filters: {\r\n    staffId?: string;\r\n    gender?: number;\r\n    startDate?: string;\r\n    endDate?: string;\r\n    export?: string;\r\n  }): Promise<Staff[] | void> {\r\n    const params = new URLSearchParams();\r\n\r\n    if (filters.staffId) params.append('staffId', filters.staffId);\r\n    if (filters.gender) params.append('gender', filters.gender.toString());\r\n    if (filters.startDate) params.append('startDate', filters.startDate);\r\n    if (filters.endDate) params.append('endDate', filters.endDate);\r\n    if (filters.export) params.append('export', filters.export);\r\n\r\n    const response = await axios.get<Staff[]>(`${this.baseUrl}?${params.toString()}`);\r\n    if(filters.export === \"EXCEL\"){\r\n        saveAs(response.data, `Staffs_${new Date().toISOString()}.xlsx`);\r\n        return;\r\n    }\r\n    else if (filters.export === \"PDF\"){\r\n        saveAs(response.data, `Staffs_${new Date().toISOString()}.pdf`);\r\n        return;\r\n    }\r\n    else\r\n        return response.data;\r\n  }\r\n}"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,YAAY;;AAUnC,OAAM,MAAOC,YAAY;EADzBC,YAAA;IAEU,KAAAC,OAAO,GAAG,mCAAmC,CAAC,CAAC;;;EAEhDC,MAAMA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACX,MAAMC,GAAG,SAASR,KAAK,CAACS,GAAG,CAACH,KAAI,CAACF,OAAO,CAAC;MACzC,OAAOI,GAAG,CAACE,IAAI;IAAC;EAClB;EAEMC,OAAOA,CAACC,EAAU;IAAA,IAAAC,MAAA;IAAA,OAAAN,iBAAA;MACtB,MAAMC,GAAG,SAASR,KAAK,CAACS,GAAG,CAAC,GAAGI,MAAI,CAACT,OAAO,IAAIQ,EAAE,EAAE,CAAC;MACpD,OAAOJ,GAAG,CAACE,IAAI;IAAC;EAClB;EAEMI,IAAIA,CAACC,KAAY,EAAEC,MAAe;IAAA,IAAAC,MAAA;IAAA,OAAAV,iBAAA;MACtC,IAAIS,MAAM,EACV,MAAMhB,KAAK,CAACkB,GAAG,CAACD,MAAI,CAACb,OAAO,EAAEW,KAAK,CAAC,CAAC,KAErC,MAAMf,KAAK,CAACmB,IAAI,CAACF,MAAI,CAACb,OAAO,EAAEW,KAAK,CAAC;IAAC;EACxC;EAEMK,MAAMA,CAACR,EAAU;IAAA,IAAAS,MAAA;IAAA,OAAAd,iBAAA;MACrB,MAAMP,KAAK,CAACoB,MAAM,CAAC,GAAGC,MAAI,CAACjB,OAAO,IAAIQ,EAAE,EAAE,CAAC;IAAC;EAC9C;EAEMU,MAAMA,CAACC,OAMZ;IAAA,IAAAC,MAAA;IAAA,OAAAjB,iBAAA;MACC,MAAMkB,MAAM,GAAG,IAAIC,eAAe,EAAE;MAEpC,IAAIH,OAAO,CAACI,OAAO,EAAEF,MAAM,CAACG,MAAM,CAAC,SAAS,EAAEL,OAAO,CAACI,OAAO,CAAC;MAC9D,IAAIJ,OAAO,CAACM,MAAM,EAAEJ,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEL,OAAO,CAACM,MAAM,CAACC,QAAQ,EAAE,CAAC;MACtE,IAAIP,OAAO,CAACQ,SAAS,EAAEN,MAAM,CAACG,MAAM,CAAC,WAAW,EAAEL,OAAO,CAACQ,SAAS,CAAC;MACpE,IAAIR,OAAO,CAACS,OAAO,EAAEP,MAAM,CAACG,MAAM,CAAC,SAAS,EAAEL,OAAO,CAACS,OAAO,CAAC;MAC9D,IAAIT,OAAO,CAACU,MAAM,EAAER,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEL,OAAO,CAACU,MAAM,CAAC;MAE3D,MAAMC,QAAQ,SAASlC,KAAK,CAACS,GAAG,CAAU,GAAGe,MAAI,CAACpB,OAAO,IAAIqB,MAAM,CAACK,QAAQ,EAAE,EAAE,CAAC;MACjF,IAAGP,OAAO,CAACU,MAAM,KAAK,OAAO,EAAC;QAC1BhC,MAAM,CAACiC,QAAQ,CAACxB,IAAI,EAAE,UAAU,IAAIyB,IAAI,EAAE,CAACC,WAAW,EAAE,OAAO,CAAC;QAChE;OACH,MACI,IAAIb,OAAO,CAACU,MAAM,KAAK,KAAK,EAAC;QAC9BhC,MAAM,CAACiC,QAAQ,CAACxB,IAAI,EAAE,UAAU,IAAIyB,IAAI,EAAE,CAACC,WAAW,EAAE,MAAM,CAAC;QAC/D;OACH,MAEG,OAAOF,QAAQ,CAACxB,IAAI;IAAC;EAC3B;;;uBAlDWR,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAmC,OAAA,EAAZnC,YAAY,CAAAoC,IAAA;MAAAC,UAAA,EADC;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}